name: Deploy React App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16' # Specify the Node.js version

    - name: Install dependencies
      run: npm install

    - name: Build React app
      env:
        CI: false # Disable CI mode to prevent ESLint warnings from being treated as errors
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: react-app
        path: build/

    - name: Install AWS CLI (if not already installed)
      run: |
        if ! command -v aws &> /dev/null; then
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscli-exe-linux-x86_64.zip"
          unzip awscli-exe-linux-x86_64.zip
          sudo ./aws/install
        fi

    - name: Deploy to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        aws s3 cp build/ s3://my-aws-bucket-react/ --recursive

    - name: Trigger EC2 Auto Scaling Update
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        # Update Auto Scaling group to use Launch Template
        aws autoscaling update-auto-scaling-group \
            --auto-scaling-group-name devops \
            --launch-template "LaunchTemplateName=devops,Version=1"

    - name: Deploy and Restart on EC2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        # You might need to SSH into an EC2 instance to run these commands
        # This assumes you have set up SSH keys and access to your EC2 instance

        # Example of SSH command execution (you need to replace `ec2-user@your-ec2-instance-ip` with your actual EC2 user and IP)
        ssh -i /path/to/your/private-key.pem ec2-user@your-ec2-instance-ip << 'EOF'
          cd /path/to/your/app
          npm install || exit
          npm run build || exit
          pm2 delete react || exit
          pm2 start npm --name "react" -- start || exit
          pm2 restart react || exit
        EOF
