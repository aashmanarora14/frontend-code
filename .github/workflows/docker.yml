name: Build Docker Image on EC2

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install SSH client
      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      # Step 3: Add SSH key and set permissions
      - name: Add SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

      # Step 4: Add EC2 host to known_hosts to prevent SSH prompt
      - name: Add EC2 host to known_hosts
        env:
          AWS_EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
        run: |
          ssh-keyscan -H $AWS_EC2_HOST >> ~/.ssh/known_hosts

      # Step 5: SSH into EC2 instance, build Docker image, and push to Docker Hub
      - name: SSH and Build Docker Image on EC2
        env:
          AWS_EC2_USER: ${{ secrets.AWS_EC2_USER }}
          AWS_EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          ssh -i ~/.ssh/deploy_key $AWS_EC2_USER@$AWS_EC2_HOST << 'EOF'
            # Update package list and install Docker if not already installed
            sudo apt-get update
            sudo apt-get install -y docker.io
            
            # Ensure Docker is running
            sudo systemctl start docker
            sudo systemctl enable docker
            
            # Navigate to the application directory or create if doesn't exist
            mkdir -p /home/ubuntu/frontend-code
            cd /home/ubuntu/frontend-code

            # Clone the latest code from GitHub repository
            if [ -d ".git" ]; then
              git pull origin main
            else
              git clone https://github.com/aashmanarora14/frontend-code .
            fi

            # Build Docker image
            sudo docker build -t my-app-image .
            sudo docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_TOKEN"
            sudo docker tag my-app-image:latest aashman1414/my-app-image:latest
            sudo docker push aashman1414/my-app-image:latest
          EOF

          # Step 6: Configure AWS credentials for ECR
      -  name: Configure AWS credentials
         uses: aws-actions/configure-aws-credentials@v2
         with:
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           aws-region: ${{ secrets.AWS_REGION }}
 
      # Step 7: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 8: Pull Docker image from Docker Hub
      - name: Pull Docker image from Docker Hub
        run: docker pull aashman1414/my-app-image:latest

      # Step 9: Tag Docker image for ECR
      - name: Tag Docker image for ECR
        run: |
          # Define the ECR repository URI
          ECR_REPOSITORY_URI=$(211125556473.dkr.ecr.ap-south-1.amazonaws.com/my-app-image)

          # Tag the Docker image with the ECR repository URI
          docker tag aashman1414/my-app-image:latest $ECR_REPOSITORY_URI:latest

      # Step 10: Push Docker image to Amazon ECR
      - name: Push Docker image to Amazon ECR
        run: |
          # Push the tagged Docker image to ECR
          docker push $ECR_REPOSITORY_URI:latest
          
